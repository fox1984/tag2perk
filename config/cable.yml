# Async adapter only works within the same process, so for manually triggering cable updates from a console,
# and seeing results in the browser, you must do so from the web console (running inside the dev process),
# not a terminal started via bin/rails console! Add "console" to any action or any ERB template view
# to make the web console appear.
development:
  adapter: async

test:
  adapter: test

staging:
  adapter: solid_cable
  connects_to:
    database:
      writing: cable
  polling_interval: 0.1.seconds
  message_retention: 1.day

production:
  adapter: solid_cable
  connects_to:
    database:
      writing: cable
  polling_interval: 0.1.seconds
  message_retention: 1.day

# To use Redis for ActionCable, uncomment redis in the Gemfile and use the following configuration:

development:
  adapter: redis
  url: <%= ENV.fetch("REDIS_URL") { "redis://localhost:6379/1" } %>
  channel_prefix: jumpstart_development
  allowed_request_origins:
    - <%= ENV.fetch("CABLE_ORIGIN") { "https://app.tag2perk.com" } %>

test:
  adapter: async

staging:
  adapter: redis
  url: <%= ENV.fetch("REDIS_URL") { "redis://localhost:6379/1" } %>
  channel_prefix: jumpstart_staging
  allowed_request_origins:
    - <%= ENV.fetch("CABLE_ORIGIN") { "https://app.tag2perk.com" } %>

production:
  adapter: redis
  url: <%= ENV.fetch("REDIS_URL") { "redis://localhost:6379/1" } %>
  channel_prefix: jumpstart_production
  allowed_request_origins:
    - <%= ENV.fetch("CABLE_ORIGIN") { "https://app.tag2perk.com" } %>
